generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String     @id @default(cuid())
  email    String     @unique
  username String     @unique
  hash     String
  games    Game[]
  lists    GameList[]
  toDoItem ToDoItem[]
  toDoList ToDoList[]
}

model GameList {
  id       String @id @default(cuid())
  listName String
  authorId String
  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  games    Game[]

  @@unique([listName, authorId])
}

model Game {
  id           String     @id @default(cuid())
  complete     Boolean
  authorId     String
  parentListId String
  igdbGameId   Int
  playStatus   Progress   @default(PlanToPlay)
  listPosition Int
  author       User       @relation(fields: [authorId], references: [id], onDelete: Cascade)
  igdbGame     igdbGame   @relation(fields: [igdbGameId], references: [id], onDelete: Cascade)
  parentList   GameList   @relation(fields: [parentListId], references: [id], onDelete: Cascade)
  toDoLists    ToDoList[]

  @@unique([igdbGameId, parentListId])
}

model ToDoList {
  id           String     @id @default(cuid())
  authorId     String
  parentGameId String
  toDoListName String
  author       User       @relation(fields: [authorId], references: [id], onDelete: Cascade)
  parentGame   Game       @relation(fields: [parentGameId], references: [id], onDelete: Cascade)
  toDoItems    ToDoItem[]

  @@unique([toDoListName, parentGameId])
}

model ToDoItem {
  id               String   @id @default(cuid())
  parentToDoListId String
  authorId         String
  taskText         String
  listPosition     Int
  author           User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  parentToDoList   ToDoList @relation(fields: [parentToDoListId], references: [id], onDelete: Cascade)
}

model igdbGame {
  id                Int                           @id @unique
  name              String
  cover             String?
  parentGame        String?
  versionParent     String?
  summary           String?
  gameListGame      Game[]
  gameName          igdbGameName[]
  gameMode          igdbGameToGameMode[]
  genre             igdbGameToGenre[]
  playerPerspective igdbGameToPlayerPerspective[]
  theme             igdbGameToTheme[]

  @@index([name])
}

model igdbGameName {
  id         String   @id @default(cuid())
  altNameId  Int?     @unique
  name       String
  igdbGameId Int
  igdbGame   igdbGame @relation(fields: [igdbGameId], references: [id], onDelete: Cascade)

  @@unique([altNameId, igdbGameId])
}

model igdbGameToPlayerPerspective {
  gameId              Int
  playerPerspectiveId Int
  game                igdbGame                  @relation(fields: [gameId], references: [id], onDelete: Cascade)
  playerPerspective   igdbGamePlayerPerspective @relation(fields: [playerPerspectiveId], references: [id])

  @@id([gameId, playerPerspectiveId])
}

model igdbGamePlayerPerspective {
  id       Int                           @id @unique
  name     String
  igdbGame igdbGameToPlayerPerspective[]
}

model igdbGameToGameMode {
  gameId     Int
  gameModeId Int
  game       igdbGame         @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameMode   igdbGameGameMode @relation(fields: [gameModeId], references: [id])

  @@id([gameId, gameModeId])
}

model igdbGameGameMode {
  id                 Int                  @id @unique
  name               String
  igdbGameToGameMode igdbGameToGameMode[]
}

model igdbGameToTheme {
  gameId  Int
  themeId Int
  game    igdbGame      @relation(fields: [gameId], references: [id], onDelete: Cascade)
  theme   igdbGameTheme @relation(fields: [themeId], references: [id])

  @@id([gameId, themeId])
}

model igdbGameTheme {
  id              Int               @id @unique
  name            String
  igdbGameToTheme igdbGameToTheme[]
}

model igdbGameToGenre {
  gameId  Int
  genreId Int
  game    igdbGame      @relation(fields: [gameId], references: [id], onDelete: Cascade)
  genre   igdbGameGenre @relation(fields: [genreId], references: [id])

  @@id([gameId, genreId])
}

model igdbGameGenre {
  id              Int               @id @unique
  name            String
  igdbGameToGenre igdbGameToGenre[]
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

enum Progress {
  PlanToPlay
  Dropped
  Completed
  Playing
  Hold
}
